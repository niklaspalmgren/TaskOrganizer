@using TaskOrganizer.AppServer.DragDrop
@using TaskOrganizer.AppServer.Services
@using TaskOrganizer.Shared
@using TaskOrganizer.AppServer.Shared
@inject ITaskBoardService TaskBoardService;

@if (TaskBoards.Count == 0)
{
    <p>
        <em>Loading...</em>
    </p>
}
else
{
    <div class="col shadow mb-4 bg-white bg-opacity-75 p-2 rounded-2">
        <div class="row">
            <div class="col-auto color-purple">
                <h3 class="m-0">Task Manager</h3>
            </div>

            <div class="col-auto">
                <NewTaskBoardComponent OnCreated="AddTaskBoard" />
            </div>

            <div class="col">
                <SearchComponent />
            </div>
        </div>

    </div>

    <div class="row mb-4">
        @foreach (var board in TaskBoards)
        {
            <div class="col-xxl-2 col-xl-3 col-lg-4 col-md-6 col-sm-12 col-xs-12">
                <TaskBoardComponent TaskBoard="@board" OnDeleted="RemoveTaskBoard" />

            </div>
        }
    </div>
}

@code {

    private List<TaskBoardDto> TaskBoards { get; set; } = new();

    protected override async Task OnInitializedAsync()
    {
        TaskBoards = await TaskBoardService.GetTaskBoardsAsync();
    }

    private void AddTaskBoard(TaskBoardDto taskBoard)
    {
        TaskBoards.Add(taskBoard);
    }

    private void RemoveTaskBoard(int id)
    {
        var board = TaskBoards.FirstOrDefault(x => x.Id == id);

        if (board is null)
            return;

        TaskBoards.Remove(board);
    }

}